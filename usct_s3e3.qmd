---
title: "Applying Data Science"
subtitle: "<font size='7'>Season 3, Episode 3</font></br><font size='5'>May 21, 2024</font>"
author: "<font size='6'>Athit Kao, PhD</font>"
institute: "<font size='4'></font></br><font size='2'><em>DISCLAIMER: Opinions expressed within this presentation are solely the author's and do not reflect the opinions and beliefs of employer or its affiliates.</em></font></br><code><font size='4' color='#FF0000'>↙ Click ≡ for menu or use arrow keys (← & →) to navigate between slides</font></code>"
footer: "[<font color='#C0C0C0' size=2'>Copyright © 2024—∞ Athit Kao, Terms and Conditions<img src='./usct_s3e3_files/img/link_external_c0c0c0.png' style='display: inline-block; margin: 0; margin-bottom: -1px; height: 10px;'/></img></font>](http://www.athitkao.com/tos.html)"
format:
  revealjs:
    theme: solarized
    background-image: "./usct_s3e3_files/img/madameberry_pub_domain_backgrounds/fragile-soft-machine_invert.jpg"
    transition: none
    slide-number: c/t
    logo: ./usct_s3e3_files/img/usct.png
include-in-header:
  text: |
    <link rel = "shortcut icon" type="image/png" href = "./usct_s3e3_files/img/usct.png" />
editor: source
---

# Introduction {visibility="hidden"}

## Goals

- High-level introduction to collaboration and scaling
- Ensure a good start on web-based environments
- Answering your questions

## Goals {visibility="uncounted"}

- High-level introduction to collaboration and scaling
- Ensure a good start on web-based environments
- Answering your questions

</br>

<h2>Prerequisites</h2>

- No programming or R experience necessary
- Familiarity with DevOps and collaborative platforms
- Interest in sharing and scaling your customized solutions

## <code><font color='#586E75'>whoami</font></code>

::: columns
::: {.column width="40%"}
![](./usct_s3e3_files/img/collaborate.png)
:::

::: {.column width="60%"}
-   "Atet"
-   R enthusiast
-   R&D ► Production
    -   Science (Bioinformatics)
    -   Engineering (Data Science)
    -   Business (Lead Investigator)
:::
:::

## Agenda

<font color='#C0C0C0'>• **S3E1**: Introduction to leveraging machine learning</br>
‎ ‎ ‎ ‎ ▪ Relevant background & Hands-on experience</br>
‎ ‎ ‎ ‎ ▪ 30,000 ft. view of a data science project</br>
• **S3E2**: How to communicate your findings to stakeholders</br>
‎ ‎ ‎ ‎ ▪ Visualization concepts & Hands-on experience</br>
‎ ‎ ‎ ‎ ▪ Visual Data Analysis</font></br>
• **S3E3**: Collaborating on and scaling your efforts</br>
‎ ‎ ‎ ‎ ▪ Collaborative data science</br>
‎ ‎ ‎ ‎ ▪ Scripts and web-based applications</br>
‎ ‎ ‎ ‎ ▪ High-performance computing concepts</br>
‎ ‎ ‎ ‎ ▪ Extended Q&A for workshop series</br>

## RECAP: Exploratory Data Analysis

![](./usct_s3e3_files/img/eda_2.png)

## RECAP: Exploratory Data Analysis {visibility="uncounted"}

![](./usct_s3e3_files/img/eda_3.png)

## RECAP: Data Visualization Methods

![](./usct_s3e3_files/img/format_and_workflow_3.png)

## RECAP: Development Environments

::: columns
::: {.column width="60%"}
RStudio Desktop

![](./usct_s3e3_files/img/tools_2.png)
:::

::: {.column width="40%"}
Web-Based R "*Light*"

![](./usct_s3e3_files/img/web_r_6.gif)
:::
:::

*Too much to install right now...*‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ *No "local" features...*

## RECAP: Posit Cloud = RStudio Desktop in the Cloud

![](./usct_s3e3_files/img/posit_cloud_1.png)

## RECAP: <a href="https://posit.cloud/plans/free" target="_blank"><font color='#586E75'>https://posit.cloud/plans/free</font></a>

![](./usct_s3e3_files/img/posit_cloud_2.png)

## RECAP: <a href="https://posit.cloud/plans/free" target="_blank"><font color='#586E75'>https://posit.cloud/plans/free</font></a>{visibility="uncounted"}

![](./usct_s3e3_files/img/posit_cloud_3.png)

## RECAP: Hands-On Machine Learning

::: columns
::: {.column width="50%"}
![](./usct_s3e3_files/img/posit_cloud_ml.png)
:::

::: {.column width="50%"}
``` r
# Read truthed training and testing data set from GitHub
truth_data = read.csv(
  "https://raw.githubusercontent.com/atet/ml_maneuver/main/dat/turns.csv")
str(truth_data) # Examine structure of the data
print("1. Data loaded.")

# Convert numeric labels to factor data class
truth_data$label = as.factor(truth_data$label)
# Split data to train and test sets
train = truth_data[truth_data$split == "train",]
test = truth_data[truth_data$split == "test",]
print("2. Data prepped.")

# Train a Random Forest algorithm with training data
if(!require("randomForest")){
  install.packages("randomForest") # Install Random Forest package
}
library(randomForest) # Load Random Forest package
rf_model = randomForest(
  label ~ .,
  data = train[,-c(2,3,14)]
)
print("3. Training complete.")

# Use trained Random Forest model on hold-out test set
prediction = predict(
  rf_model, 
  newdata = test[,-c(1,2,3,14)])
print("4. Testing complete.")

# Confusion matrix shows if model is mispredicting classes
confusion_matrix = table(unlist(test[,1]), prediction)
print("5. Evaluating performance:")
print(confusion_matrix)
```
:::
:::

## RECAP: Machine Learning Retrospective

![](./usct_s3e3_files/img/retrospective_1.png)

## RECAP: Machine Learning Retrospective {visibility="uncounted"}

![](./usct_s3e3_files/img/retrospective_2.png)

## RECAP: Machine Learning Retrospective {visibility="uncounted"}

![](./usct_s3e3_files/img/retrospective_3.png)

## RECAP: Machine Learning Retrospective {visibility="uncounted"}

![](./usct_s3e3_files/img/retrospective_4.png)

## RECAP: Machine Learning Retrospective {visibility="uncounted"}

![](./usct_s3e3_files/img/retrospective_5.png)

## RECAP: Data Science into Production

![](./usct_s3e3_files/img/production_1.png)

## RECAP: Data Science into Production {visibility="uncounted"}

![](./usct_s3e3_files/img/production_2.png)

## RECAP: Data Science into Production {visibility="uncounted"}

![](./usct_s3e3_files/img/production_3.png)

## RECAP: Data Science into Production {visibility="uncounted"}

![](./usct_s3e3_files/img/production_4.png)

## RECAP: Data Science into Production {visibility="uncounted"}

![](./usct_s3e3_files/img/production_5.png)

## RECAP: Data Science into Production {visibility="uncounted"}

![](./usct_s3e3_files/img/production_6.png)

## RECAP: Data Science into Production {visibility="uncounted"}

![](./usct_s3e3_files/img/production_7.png)

# Collaborative Data Science

*How do I share my work with others?*

## Sharing Code...

![](./usct_s3e3_files/img/collaboration_1.png)

## Best Practice: Version Control System

![](./usct_s3e3_files/img/vcs_1.png)

## Best Practice: Version Control System {visibility="uncounted"}

![](./usct_s3e3_files/img/vcs_2.png)

## Best Practice: Version Control System {visibility="uncounted"}

![](./usct_s3e3_files/img/vcs_3.png)

## Hands-On Model Building Script

::: columns
::: {.column width="50%"}
![](./usct_s3e3_files/img/posit_cloud_train.png)
:::

::: {.column width="50%"}
``` console
$ git clone https://github.com/atet/usct_s3e3.git

$ Rscript ./usct_s3e3/usct_s3e3_files/src/rf_train.R "https://raw.githubusercontent.com/atet/ml_maneuver/main/dat/turns.csv"
```

![](./usct_s3e3_files/img/posit_cloud_model.png)

:::
:::

## Hands-On Inference Script

::: columns
::: {.column width="50%"}
![](./usct_s3e3_files/img/posit_cloud_inference.png)
:::

::: {.column width="50%"}
``` console
# This data represents a "NOT LEFT" class
$ Rscript ./usct_s3e3/usct_s3e3_files/src/rf_test.R ./rf_model.rds 0 -0.01762569 54.85037 -0.0626019 109.7007 -1.306231 164.5511 1.019284 219.4015 -0.184418

# This data represents a "LEFT" class
$ Rscript ./usct_s3e3/usct_s3e3_files/src/rf_test.R ./rf_model.rds 5.530219 0.5318008 40.17718 3.525679 71.90004 18.09912 90.27125 47.64923 97.61228 83.74682
```

![](./usct_s3e3_files/img/posit_cloud_visuals.png)

:::
:::

# Collaborative Data Science

*How can other disciplines use my work?*

## RECAP: *What is a data scientist?*&nbsp;&nbsp;&nbsp;<u>A Collaborator!</u>

![](./usct_s3e3_files/img/data_scientist_5.png)

## Hands-On R Web App

::: rows
::: {.row height="50%"}
``` console
> runApp('usct_s3e3/usct_s3e3_files/src/app.R')
```
:::

::: {.row height="50%"}
![](./usct_s3e3_files/img/shiny_1.png)
:::
:::

## Hands-On R Web App {visibility="uncounted"}

::: rows
::: {.row height="50%"}
``` console
> runApp('usct_s3e3/usct_s3e3_files/src/app.R')
```
:::

::: {.row height="50%"}
![](./usct_s3e3_files/img/shiny_2.png)
:::
:::

## Hands-On R API

::: rows
::: {.row height="50%"}
``` console
> plumb(file='usct_s3e3/usct_s3e3_files/src/plumber.R')$run()
```
:::

::: {.row height="50%"}
![](./usct_s3e3_files/img/plumber_1.png)
:::
:::

## Hands-On R API {visibility="uncounted"}

::: rows
::: {.row height="50%"}
``` console
> plumb(file='usct_s3e3/usct_s3e3_files/src/plumber.R')$run()
```
:::

::: {.row height="50%"}
![](./usct_s3e3_files/img/plumber_2.png)
:::
:::

## Hands-On R API {visibility="uncounted"}

::: columns
::: {.column width="70%"}
![](./usct_s3e3_files/img/plumber_3.png)
:::

::: {.column width="30%"}
``` console
# Example of NOT_LEFT: "0,-0.01762569,54.85037,-0.0626019,109.7007,-1.306231,164.5511,1.019284,219.4015,-0.184418"
# Example of LEFT:     "5.530219,0.5318008,40.17718,3.525679,71.90004,18.09912,90.27125,47.64923,97.61228,83.74682"
```
:::
:::

## Overview of Hosting Apps & APIs on a Network

![](./usct_s3e3_files/img/hosting_1.png)

## Overview of Hosting Apps & APIs on a Network {visibility="uncounted"}

![](./usct_s3e3_files/img/hosting_2.png)

# Scaling Data Science

*How do I get more compute power beyond my laptop/desktop?*

## Split-Apply-Combine Strategy: Single-threaded

![](./usct_s3e3_files/img/sac_1.png)

## Split-Apply-Combine Strategy: Multi-threaded

![](./usct_s3e3_files/img/sac_2.png)

## Split-Apply-Combine Strategy: Multi-threaded {visibility="uncounted"}

::: columns
::: {.column width="70%"}
``` r
library(parallel)
parallel::detectCores() # Very generous for free account, Posit Cloud <3

sleep = function(seconds){
  cat("Sleeping for", seconds, "second(s)...\n")
  for(x in seconds:1){
    cat(x,"...\n", sep = "")
    Sys.sleep(1)
  }
  cat("Waking up!\n")
  return(seconds)
}

sleep(1)
sleep(2)
sleep(3)

system.time({
  sleep(4)
}) # ~4 seconds

# Singlethreaded sequential execution
system.time({
  single = lapply(1:4, sleep)
}) # ~10 seconds

# Multithreading in R for Linux (Posit Cloud is hosted on Linux)
system.time({
  multi = mclapply(1:4, sleep, mc.cores = 4)
}) # ~4 seconds!

identical(single, multi) # TRUE, identical results

###

# Multithreading in R for Windows (also works in Linux)
cluster = makePSOCKcluster(c(rep("localhost", 4)))
system.time({
  multi_windows = parLapplyLB(cluster, 1:4, sleep)
}) # ~4 seconds!

identical(multi, multi_windows) # TRUE, identical results

```

:::

::: {.column width="30%"}
:::
:::

## Split-Apply-Combine Strategy: Multi-threaded {visibility="uncounted"}

::: columns
::: {.column width="70%"}
``` r
library(parallel)
parallel::detectCores() # Very generous for free account, Posit Cloud <3

sleep = function(seconds){
  cat("Sleeping for", seconds, "second(s)...\n")
  for(x in seconds:1){
    cat(x,"...\n", sep = "")
    Sys.sleep(1)
  }
  cat("Waking up!\n")
  return(seconds)
}

sleep(1)
sleep(2)
sleep(3)

system.time({
  sleep(4)
}) # ~4 seconds

# Singlethreaded sequential execution
system.time({
  single = lapply(1:4, sleep)
}) # ~10 seconds

# Multithreading in R for Linux (Posit Cloud is hosted on Linux)
system.time({
  multi = mclapply(1:4, sleep, mc.cores = 4)
}) # ~4 seconds!

identical(single, multi) # TRUE, identical results

###

# Multithreading in R for Windows (also works in Linux)
cluster = makePSOCKcluster(c(rep("localhost", 4)))
system.time({
  multi_windows = parLapplyLB(cluster, 1:4, sleep)
}) # ~4 seconds!

identical(multi, multi_windows) # TRUE, identical results

```

:::

::: {.column width="30%"}
![](./usct_s3e3_files/img/sac_3.png)
:::
:::

## High-Performance Computing

![](./usct_s3e3_files/img/hpc_1.png)

## High-Performance Computing {visibility="uncounted"}

![](./usct_s3e3_files/img/hpc_2.png)

## High-Performance Computing {visibility="uncounted"}

![](./usct_s3e3_files/img/hpc_3.png)

##  

<center>

<h1>**Congratulations!!!**</h1>

<img src="./usct_s3e3_files/img/congratulations.gif" width="55%"/> </br>You got through the Season 3 Data Science Series!

</center>

## Summary

::: incremental
- Data Science is an interdisciplinary field

- Best practices like versioning and accessibility are critical

- HPCC to spend less time waiting and more time doing
:::

## Series Overview

• **S3E1**: Introduction to leveraging machine learning</br>
‎ ‎ ‎ ‎ ▪ Relevant background & Hands-on experience</br>
‎ ‎ ‎ ‎ ▪ 30,000 ft. view of a data science project</br></br>
• **S3E2**: How to communicate your findings to stakeholders</br>
‎ ‎ ‎ ‎ ▪ Visualization concepts & Hands-on experience</br>
‎ ‎ ‎ ‎ ▪ Visual Data Analysis</br></br>
• **S3E3**: Collaborating on and scaling your efforts</br>
‎ ‎ ‎ ‎ ▪ Collaborative data science: VCS and applications</br>
‎ ‎ ‎ ‎ ▪ High-performance computing concepts</br>

# Thank You!

Questions?

# Supplemental

# The End
